<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>SendNotificationToPreviousOwnerAction</name>
        <label>SendNotificationToPreviousOwnerAction</label>
        <locationX>534</locationX>
        <locationY>1298</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>getNotification.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>previousOwnerCollection</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <elementReference>$Label.StartWorkOnCase_ChangeOwner_Title</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>NotificationBodyForPreviousOwner</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>getCase.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>SetPreviousOwner</name>
        <label>SetPreviousOwner</label>
        <locationX>578</locationX>
        <locationY>674</locationY>
        <assignmentItems>
            <assignToReference>previousOwnerCollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>getCase.Owner:User.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>WarnPreviousUser</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>updateCase</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>IsUserActive</name>
        <label>IsUserActive</label>
        <locationX>710</locationX>
        <locationY>566</locationY>
        <defaultConnector>
            <targetReference>updateCase</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>UserNotActive</defaultConnectorLabel>
        <rules>
            <name>UserActive</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getPreviousUser.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetPreviousOwner</targetReference>
            </connector>
            <label>UserActive</label>
        </rules>
    </decisions>
    <decisions>
        <name>ShowFlow</name>
        <label>ShowFlow</label>
        <locationX>666</locationX>
        <locationY>242</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>ShowFlowRescheduled</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getCase.ABA_BOL_Reprogramado__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getQueueName</targetReference>
            </connector>
            <label>ShowFlowRescheduled</label>
        </rules>
        <rules>
            <name>ShowFlowCerrado</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getCase.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cerrado</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ScreenClosed</targetReference>
            </connector>
            <label>ShowFlowCerrado</label>
        </rules>
        <rules>
            <name>ShowFlowAnotherUserWorking</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getCase.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>En Curso</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getCase.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$User.Id</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsUserOwned</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ShowAnotherUserWorkingScreen</targetReference>
            </connector>
            <label>ShowFlowAnotherUserWorking</label>
        </rules>
        <rules>
            <name>ShowFlowNotReady</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>getCase.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>En Curso</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getCase.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$User.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ScreenNotReady</targetReference>
            </connector>
            <label>ShowFlowNotReady</label>
        </rules>
    </decisions>
    <decisions>
        <name>WarningPreviousOwner</name>
        <label>WarningPreviousOwner</label>
        <locationX>666</locationX>
        <locationY>1082</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>WarnPreviousOwner</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>WarnPreviousUser</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getNotification</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>deleteRescheduleComment</name>
        <dataType>String</dataType>
        <expression>&apos;Reprogramaci√≥n eliminada manualmente por usuario &apos; +{!$User.FirstName}+ &apos; &apos; + {!$User.LastName}</expression>
    </formulas>
    <formulas>
        <name>DifferentGroup</name>
        <dataType>Boolean</dataType>
        <expression>AND(
NOT(ISBLANK(TEXT({!getCase.LastAssignmentGroup__c}))),
NOT(ISBLANK(TEXT({!$User.WorkingGroup__c}))),
TEXT({!getCase.LastAssignmentGroup__c}) &lt;&gt; TEXT({!$User.WorkingGroup__c})
)</expression>
    </formulas>
    <formulas>
        <name>IsUserOwned</name>
        <dataType>Boolean</dataType>
        <expression>NOT(ISBLANK({!getCase.Owner:User.Id}))</expression>
    </formulas>
    <formulas>
        <name>NotificationBodyForPreviousOwner</name>
        <dataType>String</dataType>
        <expression>{!$Label.StartWorkOnCase_ChangeOwner} +&apos; &apos; + {!getCase.CaseNumber}</expression>
    </formulas>
    <formulas>
        <name>reopenComment</name>
        <dataType>String</dataType>
        <expression>&apos;Caso reabierto manualmente por usuario &apos; +{!$User.FirstName}+ &apos; &apos; + {!$User.LastName}</expression>
    </formulas>
    <interviewLabel>StartWorkOnCase {!$Flow.CurrentDateTime}</interviewLabel>
    <label>StartWorkOnCase</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>insertComment</name>
        <label>insertComment</label>
        <locationX>50</locationX>
        <locationY>674</locationY>
        <inputAssignments>
            <field>CommentBody</field>
            <value>
                <elementReference>deleteRescheduleComment</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <object>CaseComment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>insertCommentClosed</name>
        <label>insertCommentClosed</label>
        <locationX>314</locationX>
        <locationY>566</locationY>
        <inputAssignments>
            <field>CommentBody</field>
            <value>
                <elementReference>reopenComment</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <object>CaseComment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>getCase</name>
        <label>getCase</label>
        <locationX>666</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ShowFlow</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getNotification</name>
        <label>getNotification</label>
        <locationX>534</locationX>
        <locationY>1190</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SendNotificationToPreviousOwnerAction</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ABA_NT_notificacionUsuario</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getPreviousUser</name>
        <label>getPreviousUser</label>
        <locationX>710</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsUserActive</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getCase.Owner:User.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getQueueName</name>
        <label>getQueueName</label>
        <locationX>50</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>RescheduleScreen</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getCase.ABA_LIS_Cola_reprogramacion__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>updateCase</name>
        <label>updateCase</label>
        <locationX>666</locationX>
        <locationY>974</locationY>
        <connector>
            <targetReference>WarningPreviousOwner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ABA_LIS_Motivo_del_Estado__c</field>
        </inputAssignments>
        <inputAssignments>
            <field>ABA_LIS_Situacion__c</field>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>En Curso</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>updateCloseCase</name>
        <label>updateCloseCase</label>
        <locationX>314</locationX>
        <locationY>458</locationY>
        <connector>
            <targetReference>insertCommentClosed</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ABA_LIS_Motivo_del_Estado__c</field>
        </inputAssignments>
        <inputAssignments>
            <field>ABA_LIS_Situacion__c</field>
        </inputAssignments>
        <inputAssignments>
            <field>COR_Reopened__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>En Curso</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>updateRescheduledCase</name>
        <label>updateRescheduledCase</label>
        <locationX>50</locationX>
        <locationY>566</locationY>
        <connector>
            <targetReference>insertComment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ABA_DT_Fecha_reprogramacion__c</field>
        </inputAssignments>
        <inputAssignments>
            <field>ABA_LIS_Motivo_de_reprogramacion__c</field>
        </inputAssignments>
        <inputAssignments>
            <field>ABA_LIS_Motivo_del_Estado__c</field>
        </inputAssignments>
        <inputAssignments>
            <field>ABA_LIS_Situacion__c</field>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>En Curso</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <screens>
        <name>RescheduleScreen</name>
        <label>RescheduleScreen</label>
        <locationX>50</locationX>
        <locationY>458</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>updateRescheduledCase</targetReference>
        </connector>
        <fields>
            <name>RescheduleDisplay</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(250, 0, 0); font-size: 16px;&quot;&gt;ATENCI√ìN&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Este caso se encuentra actualmente &lt;/strong&gt;&lt;strong style=&quot;color: rgb(0, 0, 255);&quot;&gt;reprogramado &lt;/strong&gt;&lt;strong&gt;con los siguientes valores.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Motivo de la reprogramaci√≥n: &lt;strong style=&quot;color: rgb(0, 0, 255);&quot;&gt;{!getCase.ABA_LIS_Motivo_de_reprogramacion__c}&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;Cola de reprogramaci√≥n: &lt;strong style=&quot;color: rgb(0, 0, 255);&quot;&gt;{!getQueueName.Name}&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;Fecha de reprogramaci√≥n: &lt;strong style=&quot;color: rgb(0, 0, 255);&quot;&gt;{!getCase.ABA_DT_Fecha_reprogramacion__c}&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Si deseas trabajar en el caso, pulsa el bot√≥n &lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Gestionar caso &lt;/strong&gt;y se te asignar√° el caso en estado &lt;strong&gt;&lt;em&gt;En Curso&lt;/em&gt;&lt;/strong&gt;, eliminando la reprogramaci√≥n.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>RescheduleDisplay_DiffGroup</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 22px; background-color: rgb(255, 255, 255); color: rgb(202, 0, 0);&quot;&gt;‚ö†&lt;/span&gt;&lt;span style=&quot;font-size: 20px; background-color: rgb(255, 255, 255); color: rgb(202, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 255);&quot;&gt;Este caso se encuentra actualmente asignado a un grupo diferente.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>DifferentGroup</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <nextOrFinishButtonLabel>Gestionar caso</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>ScreenClosed</name>
        <label>ScreenClosed</label>
        <locationX>314</locationX>
        <locationY>350</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>updateCloseCase</targetReference>
        </connector>
        <fields>
            <name>DisplayClosed</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 16px; color: rgb(250, 0, 0);&quot;&gt;ATENCI√ìN&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Actualmente este caso se encuentra &lt;/strong&gt;&lt;strong style=&quot;color: rgb(0, 0, 255);&quot;&gt;cerrado&lt;/strong&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Si deseas trabajar en el caso, pulsa el bot√≥n &lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Gestionar caso&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;y se te asignar√° el caso en estado &lt;strong&gt;&lt;em&gt;En Curso&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>ClosedDisplay_DiffGroup</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 22px; background-color: rgb(255, 255, 255); color: rgb(202, 0, 0);&quot;&gt;‚ö†&lt;/span&gt;&lt;span style=&quot;font-size: 20px; background-color: rgb(255, 255, 255); color: rgb(202, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 255);&quot;&gt;Este caso se encuentra actualmente asignado a un grupo diferente.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>DifferentGroup</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <nextOrFinishButtonLabel>Gestionar caso</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>ScreenNotReady</name>
        <label>ScreenNotReady</label>
        <locationX>1018</locationX>
        <locationY>350</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>updateCase</targetReference>
        </connector>
        <fields>
            <name>DIsplayNotReady</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(250, 0, 0); font-size: 16px;&quot;&gt;ATENCI√ìN&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Actualmente este caso no se encuentra en estado &lt;em&gt;En curso&lt;/em&gt; o no eres el propietario.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Si deseas trabajar en el caso, pulsa el bot√≥n &lt;strong&gt;Gestionar caso &lt;/strong&gt;y se te asignar√° el caso en estado &lt;strong&gt;&lt;em&gt;En Curso&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>DisplayNotReady_DifferentGroup</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 22px; background-color: rgb(255, 255, 255); color: rgb(202, 0, 0);&quot;&gt;‚ö†&lt;/span&gt;&lt;span style=&quot;font-size: 20px; background-color: rgb(255, 255, 255); color: rgb(202, 0, 0);&quot;&gt; &lt;/span&gt;&lt;strong style=&quot;color: rgb(0, 0, 255);&quot;&gt;Este caso se encuentra actualmente asignado a un grupo diferente.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>DifferentGroup</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <nextOrFinishButtonLabel>Gestionar caso</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>ShowAnotherUserWorkingScreen</name>
        <label>ShowAnotherUserWorkingScreen</label>
        <locationX>710</locationX>
        <locationY>350</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>getPreviousUser</targetReference>
        </connector>
        <fields>
            <name>ShowAnotherUserWorkingDisplay</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 16px; color: rgb(250, 0, 0);&quot;&gt;ATENCI√ìN&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Actualmente &lt;/strong&gt;&lt;strong style=&quot;color: rgb(0, 0, 255);&quot;&gt;otro usuario&lt;/strong&gt;&lt;strong&gt; parece estar trabajando en este Caso.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Si deseas trabajar en el caso, pulsa el bot√≥n&amp;nbsp;&lt;strong&gt;Gestionar caso&amp;nbsp;&lt;/strong&gt;y se te asignar√° el caso en estado&amp;nbsp;&lt;strong&gt;&lt;em&gt;En Curso&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>ShowAnotherUserWorkingDisplay_DiffGroup</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 22px; background-color: rgb(255, 255, 255); color: rgb(202, 0, 0);&quot;&gt;‚ö†&lt;/span&gt;&lt;span style=&quot;font-size: 20px; background-color: rgb(255, 255, 255); color: rgb(202, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 255);&quot;&gt;Este caso se encuentra actualmente asignado a un grupo diferente.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>DifferentGroup</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <nextOrFinishButtonLabel>Gestionar caso</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>540</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>getCase</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>previousOwner</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>previousOwnerCollection</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>WarnPreviousUser</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
</Flow>
